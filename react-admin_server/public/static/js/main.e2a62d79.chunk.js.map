{"version":3,"sources":["pages/login/images/logo.png","api/ajax.js","api/index.js","utils/memoryUtils.js","utils/storageUtils.js","pages/login/login.jsx","config/menuConfig.js","utils/dateUtils.js","components/header/header.jsx","components/left-nav/leftNav.jsx","pages/home/home.jsx","pages/category/add-from.jsx","pages/category/update.jsx","pages/category/category.jsx","pages/product/detail.jsx","utils/constants.js","pages/product/home.jsx","pages/product/pictures-wall.jsx","pages/product/textEditor.jsx","pages/product/product-add-update.jsx","pages/product/product.jsx","pages/role/add-from.jsx","pages/role/updateRole.jsx","pages/role/role.jsx","pages/user/user-from.jsx","pages/user/user.jsx","pages/charts/bar.jsx","pages/charts/line.jsx","pages/charts/pie.jsx","pages/admin/admin.jsx","App.js","index.js"],"names":["module","exports","ajax","url","data","type","Promise","resolve","reject","axios","get","params","post","then","response","catch","error","message","reqLogin","username","password","reqCategorys","parentId","reqAddCategory","categoryName","reqUpdateCategory","categoryId","reqProducts","pageNum","pageSize","reqCategory","reqUpdateStatus","productId","status","reqProductAddUpdate","product","_id","reqDelete","name","reqAddRole","roleName","reqUpdateRole","role","reqUserAddOrUpdate","user","reqWeather","city","jsonp","err","results","weather_data","dayPictureUrl","weather","store","set","remove","Login","handleSubmit","event","preventDefault","props","form","validateFields","values","a","result","success","memoryUtils","storageUtils","history","replace","console","log","this","validatePwd","rule","value","callback","length","test","to","getFieldDecorator","className","src","logo","alt","onSubmit","Item","rules","required","whitespace","min","max","pattern","prefix","style","color","placeholder","validator","htmlType","Component","WrapLogin","create","menuList","title","key","icon","isPublic","children","formateDate","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","Header","state","currentTime","now","getTime","setInterval","setState","getWeather","getTitle","path","location","pathname","forEach","item","citem","logout","confirm","content","onOk","clearInterval","onClick","withRouter","SubMenu","LeftNav","hsAuth","menus","indexOf","find","child","getMenuNodes","menList","map","cItem","openKey","menuNodes","selectedKeys","defaultOpenKeys","mode","theme","Home","height","backgroundColor","display","alignItems","justifyContent","fontSize","Option","AddFrom","setForm","categorys","initialValue","Update","Category","inintColumns","columns","dataIndex","render","category","showUpdatePop","getSubCategorys","getCategorys","loading","subCategorys","getClickCategorys","showAddPop","showVisble","addCategory","errors","resetFields","updateCategory","handleCancel","extra","cursor","margin","tabBarExtraContent","width","rowKey","bordered","dataSource","pagination","defaultPageSize","showQuickJumper","visible","onCancel","Detail","cName1","cName2","pCategoryId","reslut","all","marginRight","goBack","desc","price","imgs","detail","fontWeight","dangerouslySetInnerHTML","__html","newStatus","updateStatus","marginLeft","push","getProducts","searchName","searchType","image","total","list","products","productUpdate","onChange","target","overflow","current","PicturesWall","getImgs","fileList","file","previewVisible","getBase64","reader","FileReader","readAsDataURL","onload","onerror","handleChange","img","index","uid","previewImage","uploadButton","action","accept","listType","onPreview","handlePreview","footer","TextEditor","onEditorStateChange","editorState","getDetail","draftToHtml","convertToRaw","getCurrentContent","uploadImageCallBack","xhr","XMLHttpRequest","open","FormData","append","send","addEventListener","JSON","parse","responseText","link","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","EditorState","createWithContent","createEmpty","editorStyle","border","minHeight","toolbar","uploadCallback","present","mandatory","TextArea","ProductAddUpdate","validatorPrice","initOptions","options","label","isLeaf","isUpdate","childOptions","targetOption","loadData","selectedOptions","submit","imgRef","editor","React","createRef","labelCol","span","wrapperCol","minrows","addonAfter","ref","Product","component","exact","TreeNode","UpdateRole","getTreeBodes","onCheck","checkedKeys","getMenus","treeNodes","nextProps","checkable","defaultExpandAll","Role","align","create_time","onRow","getRoles","roles","addRole","updateRole","auth","auth_name","auth_time","role_id","disabled","rowSelection","selectedRowKeys","onSelect","UserFrom","phone","email","User","rolesName","showDetePop","getuserList","users","initRoleseNames","rolseNames","reduce","pre","addOrUpdateUser","isVisble","getFieldsValue","userId","Bar","Line","Pie","Content","Footer","Sider","Admin","padding","minheight","from","textAlign","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e2a62d79.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.4d438ef9.png\";","import axios from 'axios'\r\nimport {message} from 'antd'\r\nexport default function ajax(url,data={},type='GET'){\r\n    return new Promise((resolve,reject)=>{\r\n       let promise\r\n       if(type===\"GET\"){\r\n           promise=axios.get(url,{\r\n              params:data\r\n            })\r\n        }else{\r\n            promise=axios.post(url,data)\r\n        }\r\n        promise.then(response=>{\r\n            resolve(response)\r\n        }).catch(error=>{\r\n            message.error(\"请求失败：\"+error.message)\r\n        })\r\n\r\n    })\r\n    \r\n}","/*包含应用中所有接口请求函数的模块*/\r\n//登录接口\r\nimport  ajax from './ajax'\r\nimport jsonp from 'jsonp'\r\nimport { message } from 'antd'\r\nconst BASE=\"\"\r\nexport const reqLogin=(username,password)=>ajax(BASE+'/login',{username,password},'POST')\r\n//添加用户\r\nexport const reqAddUser=(user)=>ajax(BASE+'/manage/user/add',user,'POST')\r\n//查看分类\r\nexport const reqCategorys=(parentId)=>ajax(BASE+'/manage/category/list',{parentId})\r\n//添加分类\r\nexport const reqAddCategory=(parentId,categoryName)=>ajax(BASE+'/manage/category/add',{parentId,categoryName},'POST')\r\n//更新分类\r\nexport const reqUpdateCategory=(categoryId,categoryName)=>ajax(BASE+'/manage/category/update',{categoryId,categoryName},'POST')\r\n//获取商品列表\r\nexport const reqProducts=(pageNum,pageSize)=>ajax(BASE+'/manage/product/list',{pageNum,pageSize})\r\n//添加商品\r\nexport const reqAddProduct=(categoryId,pCategoryId,name)=>ajax(BASE+'/manage/product/add',{categoryId,pCategoryId,name},'POST')\r\n//获取分类\r\nexport const reqCategory=(categoryId)=>ajax(BASE+'/manage/category/info',{categoryId})\r\n//搜索商品  searchType:搜索类型 productName/productDesc\r\nexport const reqSearchProducts=(image)=>ajax(BASE+'/manage/product/search',{image})\r\n//商品的上架或者下架\r\nexport const reqUpdateStatus=(productId,status)=>ajax(BASE+'/manage/product/updateStatus',{productId,status},'POST')\r\n//更新商品/添加商品\r\nexport const reqProductAddUpdate=(product)=>ajax(BASE+'/manage/product/'+( product._id?'update':'add'),product,'POST')\r\n//上传图片\r\nexport const reqUpload=(productId,status)=>ajax(BASE+'/manage/img/upload',{productId,status},'POST')\r\n//删除图片\r\nexport const reqDelete=(name)=>ajax(BASE+'/manage/img/delete',{name},'POST')\r\n//角色列表\r\nexport const reqRoles=()=>ajax(BASE+'/manage/role/list')\r\n//添加角色\r\nexport const reqAddRole=(roleName)=>ajax(BASE+'/manage/role/add',{roleName},'POST')\r\n//更新角色\r\nexport const reqUpdateRole=(role)=>ajax(BASE+'/manage/role/update',role,'POST')\r\n//获取用户列表\r\nexport const reqUserList=()=>ajax(BASE+'/manage/user/list')\r\n//删除指定用户\r\nexport const reqUserDelete=(userId)=>ajax(BASE+'/manage/user/delete',{userId},'POST')\r\n//添加用户\r\nexport const reqUserAddOrUpdate=(user)=>ajax(BASE+'/manage/user/'+(user._id?'update':'add'),user,'POST')\r\n/*\r\njson请求的接口请求函数\r\n */\r\nexport const reqWeather = (city) => {\r\n\r\n  return new Promise((resolve, reject) => {\r\n    const url = `http://api.map.baidu.com/telematics/v3/weather?location=${city}&output=json&ak=3p49MVra6urFRGOT9s8UBWr2`\r\n    // 发送jsonp请求\r\n    jsonp(url, {}, (err, data) => {\r\n      // 如果成功了\r\n      if (!err && data.status==='success') {\r\n        // 取出需要的数据\r\n        const {dayPictureUrl, weather} = data.results[0].weather_data[0]\r\n        resolve({dayPictureUrl, weather})\r\n      } else {\r\n        // 如果失败了\r\n        message.error('获取天气信息失败!')\r\n      }\r\n\r\n    })\r\n  })\r\n}","/**用来储存数据 */\r\nexport default{\r\n    user:{}\r\n}","/*\n进行local数据存储管理的工具模块\n */\nimport store from 'store'\nconst USER_KEY = 'user_key'\nexport default {\n  /*\n  保存user\n   */\n  saveUser (user) {\n    // localStorage.setItem(USER_KEY, JSON.stringify(user))\n    store.set(USER_KEY, user)\n  },\n\n  /*\n  读取user\n   */\n  getUser () {\n    // return JSON.parse(localStorage.getItem(USER_KEY) || '{}')\n    return store.get(USER_KEY) || {}\n  },\n\n  /*\n  删除user\n   */\n  removeUser () {\n    // localStorage.removeItem(USER_KEY)\n    store.remove(USER_KEY)\n  }\n}","import React, { Component } from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport { Form,Icon,Input,Button,message } from 'antd';\r\nimport './login.less'\r\nimport logo from './images/logo.png'\r\nimport {reqLogin} from '../../api'\r\nimport memoryUtils from '../../utils/memoryUtils'\r\nimport storageUtils from '../../utils/storageUtils'\r\nclass Login extends Component {\r\n    handleSubmit = (event) => {\r\n        // 阻止事件的默认行为\r\n        event.preventDefault()\r\n        // 对所有表单字段进行检验\r\n        this.props.form.validateFields(async(err, values) => {\r\n          // 检验成功\r\n          if (!err) {\r\n              //查看alt+<查看\r\n              const {username,password}=values\r\n              const response=await reqLogin(username,password)\r\n              const result=response.data\r\n              if(result.status===0){\r\n                 message.success(\"登录成功\")\r\n                 memoryUtils.user=result.data\r\n                 storageUtils.saveUser(result.data)\r\n                 //调整后台界面，不需要回退登录界面\r\n                 this.props.history.replace(\"/\")\r\n              }else{\r\n                message.error(result.message)\r\n              }\r\n           \r\n          }else{\r\n              console.log('校验失败')\r\n          }\r\n        });\r\n     }\r\n     validatePwd = (rule, value, callback) => {\r\n        console.log('validatePwd()', rule, value)\r\n        if(!value) {\r\n          callback('密码必须输入')\r\n        } else if (value.length<4) {\r\n          callback('密码长度不能小于4位')\r\n        } else if (value.length>12) {\r\n          callback('密码长度不能大于12位')\r\n        } else if (!/^[a-zA-Z0-9_]+$/.test(value)) {\r\n          callback('密码必须是英文、数字或下划线组成')\r\n        } else {\r\n          callback() // 验证通过\r\n        }\r\n    }\r\n    render() {\r\n        const user=memoryUtils.user\r\n        if(user._id){\r\n           return <Redirect to=\"/\" />\r\n        }\r\n      const form = this.props.form\r\n      const { getFieldDecorator } = form;\r\n      return (\r\n        <div className=\"login\">\r\n        <header className=\"login-header\">\r\n            <img  src={logo} className=\"logo\"  alt=\"\" />\r\n            <h2>react后台管理系统</h2>\r\n        </header>\r\n        <section  className=\"login-content\">\r\n            <h2>用户登录</h2>\r\n            <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                <Form.Item>\r\n                   {\r\n                    getFieldDecorator('username', {\r\n                            rules: [\r\n                            { required: true,whitespace:true, message: '用户名必须输入!' },\r\n                            {min:4,message: \"用户名至少4位\"},\r\n                            {max:12,message: \"用户名最多12位\"},\r\n                            {pattern:/^[a-zA-Z0-9_]+$/,message: \"用户名必须是英文，数字或者下划线组成\"}\r\n                        ]\r\n                    })(\r\n                    <Input\r\n                      prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                       placeholder=\"用户名\"\r\n                    />\r\n                    )\r\n                    }\r\n                </Form.Item>\r\n                <Form.Item>\r\n                   {\r\n                   getFieldDecorator('password', {\r\n                        rules: [{validator:this.validatePwd}]  \r\n                                 \r\n                    })(\r\n                        <Input\r\n                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                        type=\"password\"\r\n                        placeholder=\"密码\"\r\n                        />\r\n                    )\r\n                    }\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                        登陆\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </section>\r\n        </div>\r\n     )\r\n    }\r\n}\r\nconst WrapLogin= Form.create()(Login)\r\nexport default WrapLogin\r\n\r\n\r\n","const menuList = [\n  {\n    title: '首页', // 菜单标题名称\n    key: '/home', // 对应的path\n    icon: 'home', // 图标名称\n    isPublic: true, // 公开的\n  },\n  {\n    title: '商品',\n    key: '/products',\n    icon: 'appstore',\n    children: [ // 子菜单列表\n      {\n        title: '品类管理',\n        key: '/category',\n        icon: 'bars'\n      },\n      {\n        title: '商品管理',\n        key: '/product',\n        icon: 'tool'\n      },\n    ]\n  },\n\n  {\n    title: '用户管理',\n    key: '/user',\n    icon: 'user'\n  },\n  {\n    title: '角色管理',\n    key: '/role',\n    icon: 'safety',\n  },\n\n  {\n    title: '图形图表',\n    key: '/charts',\n    icon: 'area-chart',\n    children: [\n      {\n        title: '柱形图',\n        key: '/charts/bar',\n        icon: 'bar-chart'\n      },\n      {\n        title: '折线图',\n        key: '/charts/line',\n        icon: 'line-chart'\n      },\n      {\n        title: '饼图',\n        key: '/charts/pie',\n        icon: 'pie-chart'\n      },\n    ]\n  },\n\n  {\n    title: '订单管理',\n    key: '/order',\n    icon: 'windows',\n  },\n]\n\nexport default menuList","/*\n包含n个日期时间处理的工具函数模块\n*/\n\n/*\n  格式化日期\n*/\nexport function formateDate(time) {\n  if (!time) return ''\n  let date = new Date(time)\n  return date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate()\n    + ' ' + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds()\n}","import React, { Component } from 'react'\r\nimport { Modal} from 'antd'\r\nimport {withRouter} from 'react-router-dom'\r\nimport menuList from '../../config/menuConfig'\r\nimport './header.less'\r\nimport {formateDate} from '../../utils/dateUtils'\r\nimport  memoryUtils from '../../utils/memoryUtils'\r\nimport storageUtils from '../../utils/storageUtils'\r\nimport  {reqWeather} from '../../api/index'\r\nclass Header extends Component {\r\n    state={\r\n       currentTime:formateDate(Date.now()),\r\n       dayPictureUrl:'',\r\n       weather:'',\r\n    }\r\n    getTime=()=>{\r\n       this.time= setInterval(()=>{\r\n         const  currentTime=formateDate(Date.now())\r\n         this.setState({currentTime})\r\n        },1000)\r\n    }\r\n    getWeather=async()=>{\r\n        const {dayPictureUrl,weather}= await reqWeather(\"北京\")\r\n        this.setState({dayPictureUrl,weather})\r\n    }\r\n    getTitle=()=>{\r\n        const path=this.props.location.pathname\r\n        let title=\"\"\r\n        menuList.forEach(item=>{\r\n            if(item.key===path){\r\n                title=item.title;\r\n            }else if(item.children){\r\n                item.children.forEach(citem=>{\r\n                    if(citem.key===path){\r\n                        title=citem.title;\r\n                    }\r\n                    \r\n                })\r\n            }\r\n        })\r\n        return  title\r\n    }\r\n    logout=()=>{\r\n        Modal.confirm({\r\n            content:'确定退出吗？',\r\n            onOk:()=>{\r\n                storageUtils.removeUser();\r\n                memoryUtils.user={}\r\n              this.props.history.replace(\"/login\")\r\n            }\r\n        })\r\n    }\r\n   /*第一次render()之后执行*/\r\n    componentDidMount(){\r\n       this.getTime()\r\n       this.getWeather()\r\n    }\r\n    componentWillUnmount(){\r\n        clearInterval(this.time)\r\n    }\r\n   render() {\r\n       const {currentTime,dayPictureUrl,weather}=this.state\r\n       const user=memoryUtils.user.username\r\n       const title=this.getTitle()\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"header-top\">\r\n                欢迎{user}\r\n                <span className=\"btn\" onClick={this.logout}>退出</span>\r\n            </div>\r\n            <div className=\"header-bottom\">\r\n                <div className=\"header-bottom-left\">{title}</div>\r\n                <div className=\"header-bottom-right\">\r\n                    <span>{currentTime}</span>\r\n                    <img src={dayPictureUrl} alt=\"\" />\r\n                    <span>{weather}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n   }\r\n}\r\nexport default withRouter(Header)","import React, { Component } from 'react'\r\nimport {Link,withRouter} from 'react-router-dom'\r\nimport logo from '../../pages/login/images/logo.png'\r\nimport './left-nav.less'\r\nimport { Menu, Icon} from 'antd';\r\nimport menList from '../../config/menuConfig'\r\nimport memoryUtils from \"../../utils/memoryUtils\"\r\nconst { SubMenu } = Menu;\r\nclass LeftNav extends Component {\r\n  //判断当前登录用户item是否有权限\r\n  hsAuth=(item)=>{\r\n   const key=item.key\r\n   const menus=memoryUtils.user.role.menus\r\n   if(item.isPublic || memoryUtils.user.username===\"admin\" || menus.indexOf(key) !==-1){\r\n     return true\r\n   }else if(item.children){\r\n      return  !!item.children.find(child=>menus.indexOf(child.key) !==-1)\r\n   }\r\n   return false\r\n  }\r\n  getMenuNodes=(menList)=>{\r\n      return  menList.map(item=>{\r\n       //如果当前用户对应的item才显示菜单项\r\n        if(this.hsAuth(item)){\r\n          if(item.children){\r\n                const path=this.props.location.pathname\r\n                const cItem=item.children.find(cItem=>path.indexOf(cItem.key)===0)\r\n                if(cItem){\r\n                  this.openKey=item.key\r\n                }\r\n              return (\r\n                <SubMenu key={item.key} title={<span><Icon type={item.icon} /><span>{item.title}</span></span>}>\r\n                  {this.getMenuNodes(item.children)} \r\n                </SubMenu>\r\n              )  \r\n          }else{\r\n            return (\r\n              <Menu.Item key={item.key}>\r\n                <Link to={item.key}>\r\n                  <Icon type={item.icon} />\r\n                  <span>{item.title}</span>\r\n                </Link>\r\n              </Menu.Item>\r\n            ) \r\n          }\r\n        }\r\n       \r\n         \r\n      })\r\n  }\r\n  componentWillMount(){\r\n    this.menuNodes=this.getMenuNodes(menList)\r\n  }\r\nrender() {\r\nlet path=this.props.location.pathname\r\nconst openKey=this.openKey\r\nif(path.indexOf('/product')===0){\r\n  path='/product'\r\n}\r\nreturn (\r\n    <div className=\"left-nav\">\r\n       <Link to=\"/\" className=\"left-nav-header\">\r\n           <img src={logo} alt=\"logo\" />\r\n           <h2>react后台</h2>\r\n       </Link>\r\n       <Menu selectedKeys={[path]} defaultOpenKeys={[openKey]}  mode=\"inline\" theme=\"dark\">\r\n          {this.menuNodes} \r\n        </Menu>\r\n    </div>\r\n);\r\n}\r\n}\r\nexport default withRouter(LeftNav)","import React, { Component } from 'react'\r\nexport default class Home extends Component {\r\n    constructor(props) {\r\n    super(props);\r\n    this.state = {}\r\n    }\r\n    render() {\r\n        return (\r\n        <div style={{height:'100%',backgroundColor:'#fff',display:'flex',alignItems: 'center',justifyContent: 'center'}}>\r\n            <h2 style={{fontSize:'30px'}}>欢迎使用react管理系统</h2>\r\n        </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport {Form,Select,Input,} from 'antd'\r\nimport PropTypes from 'prop-types'\r\nconst Item=Form.Item\r\nconst Option=Select.Option\r\nclass AddFrom extends Component {\r\n    constructor(props) {\r\n    super(props);\r\n    this.state = {}\r\n    }\r\n    static propTypes={\r\n        categorys:PropTypes.array.isRequired,\r\n        parentId:PropTypes.string.isRequired,\r\n        setForm:PropTypes.func.isRequired\r\n    }\r\n    componentWillMount(){\r\n        this.props.setForm(this.props.form)\r\n    }\r\n    render() {\r\n        const {getFieldDecorator}=this.props.form\r\n        const {categorys, parentId}=this.props\r\n       return (\r\n           <Form>\r\n              <Item>\r\n                  {\r\n                    getFieldDecorator(\"parentId\",{\r\n                        initialValue:parentId\r\n                    })(\r\n                    <Select>\r\n                        <Option value=\"0\">一级分类</Option>\r\n                        {\r\n                            categorys.map(item=>{\r\n                            return  <Option value={item._id} key={item._id}>{item.name}</Option>\r\n                            })\r\n                        }\r\n                    </Select>\r\n                    )\r\n                  }\r\n              </Item>\r\n              <Item>\r\n                {\r\n                    getFieldDecorator(\"categoryName\",{\r\n                        initialValue:'',\r\n                        rules:[\r\n                            {required:true,message:'分类名称必须输入'} \r\n                         ]\r\n                    })(\r\n                        <Input type=\"text\"placeholder=\"请输入分类名称\" />\r\n                    )\r\n                  }\r\n                \r\n               </Item>\r\n            </Form>\r\n       );\r\n    }\r\n}\r\n\r\nexport default Form.create()(AddFrom)","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Form,Input} from 'antd'\r\nconst Item=Form.Item\r\nclass Update extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    static propTypes={\r\n        categoryName:PropTypes.string.isRequired,\r\n        setForm:PropTypes.func.isRequired\r\n    }\r\n    componentWillMount(){\r\n        this.props.setForm(this.props.form)\r\n    }\r\n    render() {\r\n        const {categoryName}=this.props\r\n        const {getFieldDecorator}=this.props.form\r\n        return (\r\n            <Form>\r\n                <Item>\r\n                {\r\n                    getFieldDecorator(\"categoryName\",{\r\n                        initialValue:categoryName,\r\n                        rules:[\r\n                           {required:true,message:'分类名称必须输入'} \r\n                        ]\r\n                    })(\r\n                        <Input type=\"text\"placeholder=\"请输入分类名称\" />\r\n                    )\r\n                    }\r\n                \r\n                </Item>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\nexport default Form.create()(Update)","import React, { Component } from 'react'\r\nimport { Card ,Table,Button,Icon, message,Modal} from 'antd';\r\nimport  './category.less'\r\nimport {reqCategorys,reqUpdateCategory,reqAddCategory} from '../../api/index'\r\nimport AddFrom from './add-from'\r\nimport Update from './update'\r\nexport default class Category extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading:false,\r\n            categorys:[],//一级分类数组\r\n            subCategorys:[],//二级分类数组\r\n            parentId:'0',\r\n            categoryName:'',\r\n            showVisble:0  //0:为都不显示 1：显示添加分类 2:显示修改分类\r\n        }\r\n    }\r\n    //初始化所有的例数\r\n    inintColumns=()=>{\r\n        this.columns = [\r\n            {\r\n              title: '分类',\r\n              dataIndex: 'name',\r\n              key: 'name',\r\n            },\r\n            {\r\n              title: '操作',\r\n              render:(category)=>(\r\n                  <div className=\"btnDiv\">\r\n                       <div className=\"cc\" onClick={()=>this.showUpdatePop(category)}>修改分类</div> \r\n                       {\r\n                          this.state.parentId==='0'?<div className=\"btn2\" onClick={()=>this.getSubCategorys(category)}>查看子分类</div>:''\r\n                       }\r\n                       \r\n                  </div>\r\n              )\r\n            }\r\n        ]\r\n    }\r\n    getCategorys= async()=>{\r\n        this.setState({loading:true})\r\n        const result=await reqCategorys(this.state.parentId);\r\n        this.setState({loading:false})\r\n        if(result.data.status===0){\r\n            const categorys=result.data.data\r\n            if(this.state.parentId==='0'){\r\n                this.setState({categorys})\r\n            }else{\r\n                this.setState({subCategorys:categorys})\r\n            }\r\n            \r\n        }else{\r\n           message.error('获取列表失败')\r\n        }\r\n    }\r\n    //二级分类列表\r\n    getSubCategorys=(category)=>{\r\n        this.setState({\r\n            parentId:category._id,\r\n            categoryName:category.name\r\n        },()=>{\r\n            this.getCategorys()\r\n        })\r\n    }\r\n    //点击获取一级分类列表\r\n    getClickCategorys=()=>{\r\n        this.setState({\r\n            parentId:'0',\r\n            categoryName:'',\r\n            subCategorys:[]\r\n        },()=>{\r\n            this.getCategorys()\r\n        })\r\n    }\r\n    //显示添加分类对话框\r\n    showAddPop=()=>{\r\n        this.setState({\r\n            showVisble:1\r\n        })\r\n    }\r\n    //添加分类\r\n    addCategory=()=>{\r\n        this.form.validateFields(async(errors,values)=>{\r\n          if(!errors){\r\n            this.setState({\r\n                showVisble:0\r\n            })\r\n            const {categoryName,parentId}=values\r\n            this.form.resetFields()//重置所有的数据\r\n            const reslut=await reqAddCategory(parentId,categoryName)\r\n            if(reslut.data.status===0){\r\n                if(parentId===this.state.parentId){//填写的ID和当前的ID相同再刷新\r\n                    this.getCategorys()\r\n                }\r\n                \r\n            }\r\n          }\r\n        })\r\n        \r\n    }\r\n    //显示修改分类对话框\r\n    showUpdatePop=(category)=>{\r\n        this.category=category\r\n        this.setState({\r\n            showVisble:2\r\n        })\r\n    }\r\n    //修改分类\r\n    updateCategory=()=>{\r\n        this.form.validateFields(async(errors,values)=>{\r\n            if(!errors){\r\n                this.setState({\r\n                    showVisble:0\r\n                })\r\n                const categoryId=this.category._id\r\n                const categoryName=values\r\n                this.form.resetFields()//重置所有的数据\r\n                const reslut=await reqUpdateCategory(categoryId,categoryName)\r\n                if(reslut.data.status===0){\r\n                    this.getCategorys()\r\n                }\r\n            }\r\n        })   \r\n    }\r\n    //关闭对话框\r\n    handleCancel=()=>{\r\n        this.form.resetFields()\r\n        this.setState({\r\n            showVisble:0\r\n        })\r\n    }\r\n    componentWillMount(){\r\n       this.inintColumns() \r\n    }\r\n    componentDidMount(){\r\n        this.getCategorys()\r\n    }\r\n    render() {\r\n        const extra=(\r\n            <Button type='primary' onClick={this.showAddPop}>\r\n                <Icon type=\"plus\" />添加\r\n            </Button>\r\n        )\r\n        const{parentId,categorys,subCategorys,categoryName,loading,showVisble}=this.state\r\n        const category=this.category ||{}\r\n        return (\r\n         <Card  title={parentId===\"0\"?'一级分类':(\r\n                 <div>\r\n                    <span style={{color:'#1DA57A',cursor:'pointer'}} onClick={this.getClickCategorys}>一级分类</span>\r\n                    <Icon type=\"arrow-right\" style={{margin:'0px 10px'}} />\r\n                     <span>{categoryName}</span>\r\n                 </div>\r\n              )} tabBarExtraContent={<div>ddsads</div>} extra={extra} style={{ width:'100%',height:'100%'}}>\r\n          \r\n            <Table  \r\n            rowKey=\"_id\" \r\n            bordered \r\n            dataSource={parentId===\"0\"?categorys:subCategorys} \r\n            columns={this.columns} \r\n            pagination={{defaultPageSize:8,showQuickJumper:true}}\r\n            loading={loading}\r\n            />\r\n            <Modal\r\n                title=\"添加分类\"\r\n                visible={showVisble===1}\r\n                onOk={this.addCategory}\r\n                onCancel={this.handleCancel}\r\n                >\r\n                <AddFrom \r\n                categorys={categorys} \r\n                parentId={parentId}  \r\n                setForm={(form)=>this.form=form}\r\n                 />\r\n            </Modal>\r\n            <Modal\r\n                title=\"修改分类\"\r\n                visible={showVisble===2}\r\n                onOk={this.updateCategory}\r\n                onCancel={this.handleCancel}\r\n                >\r\n                <Update categoryName={category.name} setForm={(form)=>this.form=form}/>\r\n            </Modal>\r\n        </Card>\r\n          \r\n        );\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport {Card,Icon,List} from 'antd'\r\nimport {reqCategory} from '../../api/index'\r\nimport {BASE_IMGURL} from '../../utils/constants'\r\nconst Item=List.Item\r\nexport default class Detail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            cName1:'',\r\n            cName2:''\r\n        }\r\n    }\r\n    async componentDidMount (){\r\n     console.log()\r\n        const{pCategoryId,categoryId}=this.props.location.state\r\n        if(pCategoryId===\"0\"){\r\n            const reslut= await reqCategory(categoryId)\r\n            if(reslut.data.data){\r\n               const cName1=reslut.data.data.name\r\n               this.setState({cName1})\r\n            }\r\n        }else{\r\n            const results=await Promise.all([reqCategory(pCategoryId),reqCategory(categoryId)])\r\n            if(results[0].data.data){\r\n                const cName1=results[0].data.data.name\r\n                const cName2=results[1].data.data.name\r\n                this.setState({cName1,cName2})\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        const title=(\r\n            <div>\r\n              <Icon \r\n              type=\"arrow-left\" \r\n              style={{color:'#1DA57A',marginRight:'10px',cursor:'pointer'}}\r\n              onClick={()=>this.props.history.goBack()}\r\n               />\r\n              <span>商品详情</span>\r\n            </div>\r\n         )\r\n        const {name,desc,price,imgs,detail}=this.props.location.state\r\n        \r\n        const {cName1,cName2}=this.state\r\n        return (\r\n            <Card title={title} style={{ width:'100%',height:'100%' }}>\r\n                <List>\r\n                    <Item style={{ justifyContent: 'flex-start'}}>\r\n                        <span style={{fontWeight:'bold',marginRight:'10px'}}>商品名称：</span>\r\n                        <span>{name}</span>\r\n                    </Item>\r\n                    <Item style={{ justifyContent: 'flex-start'}}>\r\n                        <span style={{fontWeight:'bold'}}>商品描述：</span>\r\n                        <span>{desc}</span>\r\n                    </Item>\r\n                    <Item style={{ justifyContent: 'flex-start'}}>\r\n                        <span style={{fontWeight:'bold'}}>商品价格：</span>\r\n                        <span>￥{price}元</span>\r\n                    </Item>\r\n                    <Item style={{ justifyContent: 'flex-start'}}>\r\n                        <span style={{fontWeight:'bold'}}>属于分类：</span>\r\n                        <span>{cName1}{cName2?'>'+cName2:''}</span>\r\n                    </Item>\r\n                    <Item style={{ justifyContent: 'flex-start'}}>\r\n                        <span style={{fontWeight:'bold'}}>商品图片：</span>\r\n                        <div>\r\n                            {\r\n                                imgs.map(item=>(\r\n                                    <img key={item} style={{width:'100px',marginRight:'10px'}} src={BASE_IMGURL+item} alt=\"\" />\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </Item>\r\n                    <Item style={{ justifyContent: 'flex-start'}}>\r\n                        <span style={{fontWeight:'bold'}}>商品详情：</span>\r\n                        <span dangerouslySetInnerHTML={{__html:detail}}></span>\r\n                    </Item>\r\n                </List>\r\n           </Card>\r\n        );\r\n    }\r\n}","export const PAGESIZE=7\r\nexport const BASE_IMGURL=\"http://localhost:5000/upload/\"","import React, { Component } from 'react'\r\nimport './home.less'\r\nimport{Card,Select,Input,Button,Icon,Table, message} from 'antd'\r\nimport {PAGESIZE} from '../../utils/constants'\r\nimport {reqProducts,reqSearchProducts,reqUpdateStatus} from '../../api/index'\r\nconst Option=Select.Option\r\nexport default class Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            products:[],\r\n            total:0,\r\n            searchName:'',\r\n            searchType:'productName',\r\n            loading:false\r\n        }\r\n        \r\n    }\r\n    inintColumns=()=>{\r\n        this.columns = [\r\n            {\r\n              title: '商品名称',\r\n              dataIndex: 'name',\r\n              key: 'name',\r\n            },\r\n            {\r\n                title: '商品描述',\r\n                dataIndex: 'desc',\r\n                key: 'desc',\r\n            },\r\n            {\r\n                title: '价格',\r\n                dataIndex: 'price',\r\n                render:(price)=>(\r\n                    '￥'+price\r\n                )\r\n            },\r\n            {\r\n              title: '状态',\r\n              render:(product)=>{\r\n                const {status,_id}=product\r\n                const newStatus=status===1?0:1\r\n                return(\r\n                    <div className=\"btnDiv\">\r\n                       <Button type=\"primary\" onClick={()=>this.updateStatus(_id,newStatus)}>\r\n                        {\r\n                            status===1?'下架':'上架'\r\n                        }\r\n                       </Button>\r\n                       <span style={{marginLeft:'10px',color:'#222'}}> \r\n                         {\r\n                            status===1?'在售':'已下架'\r\n                          }\r\n                       </span>\r\n                    </div>\r\n                )\r\n              }\r\n              \r\n            },\r\n            {\r\n              title: '操作',\r\n              render:(product)=>{\r\n                return(\r\n                  <div className=\"btnDiv2\">\r\n                       <span onClick={()=>this.props.history.push('/product/detail',product)}>详情</span>\r\n                       <span style={{marginLeft:'10px'}} onClick={()=>this.props.history.push('/product/addupdate',product)}>修改</span>\r\n                  </div>\r\n                )\r\n                   \r\n              }\r\n            }\r\n        ]\r\n    }\r\n    getProducts=async(pageNum)=>{\r\n        this.pageNum=pageNum //这是为以后上架下架准备的页码存储\r\n        this.setState({loading:true})\r\n        const {searchName,searchType}=this.state\r\n        let result\r\n        if(searchName && searchName!==\"\"){\r\n            result=await reqSearchProducts({pageNum,pageSize:PAGESIZE,searchName,searchType})\r\n        }else{\r\n            result=await reqProducts(pageNum,PAGESIZE)\r\n        }\r\n        this.setState({loading:false})\r\n        if(result.data.status===0){\r\n            const {total,list}=result.data.data\r\n           this.setState(\r\n               {\r\n                total,\r\n                products:list \r\n               }\r\n           )\r\n        }\r\n    }\r\n    //对产品的上架或者下架\r\n    updateStatus= async(parentId,status)=>{\r\n        const result=await reqUpdateStatus(parentId,status)\r\n        if(result.data.status===0){\r\n            message.success('更新商品成功')\r\n            this.getProducts(this.pageNum)\r\n        }\r\n    }\r\n     //更新商品\r\n     productUpdate=()=>{\r\n\r\n     }\r\n    componentWillMount(){\r\n        this.inintColumns()\r\n    }\r\n    componentDidMount(){\r\n        this.getProducts(1)\r\n    }\r\n    render() {\r\n        const {products,total,searchName,searchType,loading}=this.state\r\n        const extra=(\r\n            <Button type='primary' onClick={()=>this.props.history.push('/product/addupdate')}>\r\n                <Icon type=\"plus\" />添加商品\r\n            </Button>\r\n        )\r\n        const title=(\r\n            <div>\r\n              <Select value={searchType} onChange={(value)=>this.setState({searchType:value})}>\r\n                  <Option value=\"productName\">按名称搜索</Option>\r\n                  <Option value=\"productDesc\">按描述搜索</Option>\r\n              </Select>\r\n              <Input type=\"text\" placeholder=\"关键字\" \r\n              value={searchName} \r\n              style={{margin:'0px 10px',width:'150px'}} \r\n              onChange={(event)=>this.setState({searchName:event.target.value})}\r\n              />\r\n              <Button type='primary' onClick={()=>{this.getProducts(1)}}>搜索</Button>\r\n            </div>\r\n         )\r\n        \r\n        return (\r\n          <Card className=\"cardtitle\" title={title} extra={extra} style={{ width:'100%',height:'100%',overflow:'auto' }}>\r\n              <Table  \r\n                bordered \r\n                rowKey='_id'\r\n                dataSource={products} \r\n                columns={this.columns} \r\n                loading={loading}\r\n                pagination={{\r\n                    defaultPageSize:PAGESIZE,\r\n                    showQuickJumper:true,\r\n                    onChange:this.getProducts ,\r\n                    total,\r\n                    current:this.pageNum\r\n                }}\r\n               \r\n                />\r\n          </Card>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Upload, Icon, Modal, message } from 'antd';\r\nimport {reqDelete} from '../../api/index'\r\nimport {BASE_IMGURL} from '../../utils/constants'\r\nexport default class PicturesWall extends Component {\r\n    static propTypes={\r\n     imgs:PropTypes.array\r\n    }\r\nconstructor(props) {\r\n    super(props);\r\n    let fileList=[]\r\n    const {imgs}=this.props\r\n    \r\n    if(imgs && imgs.length>0){\r\n        fileList= imgs.map((img,index)=>({\r\n            uid:-index,\r\n            name:img,\r\n            status:'done',\r\n            url:BASE_IMGURL+img\r\n        }))\r\n    }\r\n    this.state = {\r\n        previewVisible: false,//是否显示大图\r\n        previewImage: '',\r\n        fileList:fileList,\r\n    };\r\n}\r\ngetImgs=()=>{\r\n    return this.state.fileList.map(file=>file.name)\r\n}\r\nhandleCancel = () => this.setState({ previewVisible: false });//是否显示大图\r\ngetBase64=(file)=> {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = error => reject(error);\r\n    });\r\n}\r\nhandleChange = async({file, fileList }) => {\r\n    if(file.status===\"done\"){\r\n        \r\n        const result=file.response\r\n       \r\n        if(result.status===0){\r\n            message.success('上传图片成功')\r\n            const {name,url}=result.data\r\n            file=fileList[fileList.length-1]\r\n            file.name=name\r\n            file.url=url\r\n            console.log(file)\r\n        }else{\r\n            message.success('上传图片失败') \r\n        }\r\n\r\n    }else if(file.status===\"removed\"){\r\n      const reslut= await reqDelete(file.name)\r\n      if(reslut.data.status===0){\r\n        message.success('删除图片成功') \r\n      }else{\r\n        message.success('删除图片失败') \r\n      }\r\n    }\r\n    this.setState({ fileList })\r\n}\r\nrender() {\r\n    const { previewVisible, previewImage, fileList } = this.state;\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type=\"plus\" />\r\n        <div className=\"ant-upload-text\">Upload</div>\r\n      </div>\r\n    );\r\n    return (\r\n      <div className=\"clearfix\">\r\n        <Upload\r\n          action=\"/manage/img/upload\"\r\n          accept=\"image/*\" /**只接受图片格式 */\r\n          name='image'/**请求参数名 */\r\n          listType=\"picture-card\"\r\n          fileList={fileList}\r\n          onPreview={this.handlePreview}\r\n          onChange={this.handleChange}\r\n        >\r\n          {fileList.length >= 3 ? null : uploadButton}\r\n        </Upload>\r\n        <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\r\n          <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n        </Modal>\r\n      </div>\r\n    );\r\n}\r\n}","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {EditorState, convertToRaw, ContentState} from 'draft-js'\r\nimport {Editor} from 'react-draft-wysiwyg'\r\nimport draftToHtml from 'draftjs-to-html'\r\nimport htmlToDraft from 'html-to-draftjs'\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\r\nexport default class TextEditor extends Component {\r\n    static propTypes={\r\n        datail:PropTypes.string\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n        const {detail}=this.props\r\n        if(detail){\r\n            const contentBlock = htmlToDraft(detail)\r\n            const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks)\r\n            const editorState = EditorState.createWithContent(contentState)\r\n            this.state = {\r\n              editorState,\r\n            }\r\n        }else{\r\n            this.state = {\r\n                editorState: EditorState.createEmpty(), // 创建一个没有内容的编辑对象\r\n            }\r\n        }\r\n    }\r\n    onEditorStateChange=(editorState)=>{\r\n        this.setState({editorState})\r\n    }\r\n    getDetail=()=>{\r\n        // 返回输入数据对应的html格式的文本\r\n        return draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()))\r\n    }\r\n    uploadImageCallBack = (file) => {\r\n        return new Promise(\r\n          (resolve, reject) => {\r\n            const xhr = new XMLHttpRequest()\r\n            xhr.open('POST', '/manage/img/upload')\r\n            const data = new FormData()\r\n            data.append('image', file)\r\n            xhr.send(data)\r\n            xhr.addEventListener('load', () => {\r\n              const response = JSON.parse(xhr.responseText)\r\n              const url = response.data.url // 得到图片的url\r\n              resolve({data: {link: url}})\r\n            })\r\n            xhr.addEventListener('error', () => {\r\n              const error = JSON.parse(xhr.responseText)\r\n              reject(error)\r\n            })\r\n          }\r\n        )\r\n      }\r\n    render() {\r\n        const {editorState}=this.state\r\n       return (\r\n        <Editor\r\n        editorState={editorState}\r\n        editorStyle={{border:'1px solid #ccc',minHeight:'200px'}}\r\n        onEditorStateChange={this.onEditorStateChange}\r\n        toolbar={{\r\n            image: { uploadCallback: this.uploadImageCallBack, alt: { present: true, mandatory: true } },\r\n          }}\r\n      />\r\n       );\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport {reqCategorys,reqProductAddUpdate} from '../../api/index'\r\nimport {Card,Icon,Form,Input,Cascader,Button,message} from 'antd'\r\nimport PicturesWall from './pictures-wall'\r\nimport TextEditor from './textEditor'\r\nconst {Item}=Form\r\nconst { TextArea } = Input\r\nclass ProductAddUpdate extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.imgRef = React.createRef();//用于父调用子的数据\r\n        this.editor=React.createRef();\r\n        this.state = {\r\n            options:[]\r\n        }\r\n    }\r\n    /**验证价格 */\r\n    validatorPrice=(rule,value,callback)=>{\r\n     if(value*1>0){\r\n         callback()\r\n     }else{\r\n        callback('价格必须大于0') \r\n     }\r\n    }\r\n    //查询一级分类/二级分类列表\r\n    getCategorys= async(parentId)=>{\r\n      const result=await  reqCategorys(parentId)\r\n      if(result.data.status===0){\r\n          const categorys=result.data.data\r\n          if(parentId===\"0\"){\r\n            this.initOptions(categorys)\r\n          }else{\r\n            return categorys\r\n          }\r\n          \r\n      }\r\n    }\r\n    //处理一级数据\r\n    initOptions= async(categorys)=>{\r\n       const options=categorys.map(item=>({\r\n          value:item._id,\r\n          label:item.name,\r\n          isLeaf:false\r\n        }))\r\n        const {isUpdate,product}=this\r\n        const {pCategoryId}=product\r\n        if(isUpdate){\r\n            const subCategorys=await this.getCategorys(pCategoryId)\r\n            const childOptions=subCategorys.map(item=>({\r\n                value:item._id,\r\n                label:item.name,\r\n                isLeaf:true\r\n            }))\r\n           const targetOption=options.find(item=>item.value===pCategoryId)\r\n           if(targetOption){\r\n               targetOption.children=childOptions\r\n           }\r\n        }\r\n        this.setState({options})\r\n    }\r\n    //点击获取二级分类\r\n    loadData = async(selectedOptions) => {\r\n        const targetOption = selectedOptions[0];\r\n        targetOption.loading = true;\r\n        const subCategorys= await this.getCategorys(targetOption.value)\r\n        targetOption.loading = false;\r\n        if(subCategorys && subCategorys.length>0){\r\n            const childOptions=subCategorys.map(item=>({\r\n                value:item._id,\r\n                label:item.name,\r\n                isLeaf:true\r\n            }))\r\n            targetOption.children=childOptions\r\n            this.setState({\r\n                options: [...this.state.options],\r\n            });\r\n        }else{\r\n            targetOption.isLeaf=true\r\n        }\r\n      }\r\n    submit= ()=>{\r\n        this.props.form.validateFields(async(errors, values)=>{\r\n          if(!errors){\r\n              const {name, desc, price,categorys} = values\r\n              const imgs=this.imgRef.current.getImgs()//图片数组\r\n              const detail=this.editor.current.getDetail()//副文件内容\r\n              let  pCategoryId,categoryId\r\n              if(categorys.length===1){\r\n                  pCategoryId=\"0\"\r\n                  categoryId=categorys[0]\r\n              }else{\r\n                pCategoryId=categorys[0]\r\n                categoryId=categorys[1]\r\n              }\r\n              const product={name, desc, price,imgs,detail, pCategoryId, categoryId}\r\n              if(this.isUpdate){\r\n                product._id=this.product._id\r\n              }\r\n              const result= await reqProductAddUpdate(product);\r\n              if(result.data.status===0){\r\n                  message.success(`${this.isUpdate?'更新':'添加'}商品成功`)\r\n                  this.props.history.goBack()\r\n              }else{\r\n                message.error(`${this.isUpdate?'更新':'添加'}商品商品失败`)\r\n              }\r\n          }\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        this.getCategorys('0')\r\n    }\r\n    componentWillMount(){\r\n        //取出数据\r\n       const product=this.props.location.state\r\n       this.isUpdate=!!product\r\n       this.product=product||{}\r\n    }\r\n    render() {\r\n        const {isUpdate,product}=this\r\n        const {getFieldDecorator}=this.props.form\r\n        const {pCategoryId,categoryId,name,desc,price,imgs,detail}=product\r\n        const categorys=[]\r\n        if(pCategoryId===\"0\"){\r\n            categorys.push(categoryId)\r\n        }else{\r\n            categorys.push(pCategoryId)\r\n            categorys.push(categoryId)\r\n        }\r\n        const title=(\r\n            <div>\r\n              <Icon \r\n              type=\"arrow-left\" \r\n              style={{color:'#1DA57A',marginRight:'10px',cursor:'pointer'}}\r\n              onClick={()=>this.props.history.goBack()}\r\n               />\r\n              <span>{isUpdate?'修改商品':'添加商品'}</span>\r\n            </div>\r\n        )\r\n        const formItemLayout = {\r\n            labelCol: {span:2},\r\n            wrapperCol: {span:8}\r\n        }\r\n        \r\n        return (\r\n            <Card title={title} style={{ width:'100%',height:'100%',overflow:'auto'}}>\r\n                <Form {...formItemLayout}>\r\n                    <Item label=\"商品名称\">\r\n                        {\r\n                            getFieldDecorator('name',{\r\n                                initialValue:name,\r\n                                rules:[\r\n                                    {required:true,message:'必须输入商品名称'}\r\n                                ]\r\n                            })(<Input type=\"text\" placeholder=\"请输入商品名称\" />)\r\n                        }\r\n                    </Item>  \r\n                    <Item label=\"商品描述\">\r\n                        {\r\n                            getFieldDecorator('desc', {\r\n                                initialValue:desc,\r\n                                rules: [\r\n                                {required: true, message: '必须输入商品描述'}\r\n                                ]\r\n                            })(<TextArea placeholder=\"请输入商品描述\"  minrows={2} />)\r\n                        }\r\n                    </Item>\r\n                    <Item label=\"商品价格\">\r\n                        {\r\n                        getFieldDecorator('price', {\r\n                            initialValue:price,\r\n                            rules: [\r\n                            {required: true, message: '必须输入商品价格'},\r\n                            {validator:this.validatorPrice}\r\n                            ]\r\n                        })(<Input type='number' placeholder='请输入商品价格' addonAfter='元'/>)\r\n                        }\r\n                    </Item>\r\n                    <Item label=\"商品分类\">\r\n                        {\r\n                            getFieldDecorator('categorys', {\r\n                                initialValue:categorys,\r\n                                rules: [\r\n                                {required: true, message: '必须输入商品分类'}\r\n                                ]\r\n                            })(<Cascader\r\n                                options={this.state.options}\r\n                                loadData={this.loadData}\r\n                            />)\r\n                        }\r\n                    </Item>\r\n                    <Item label=\"商品图片\">\r\n                        <PicturesWall ref={this.imgRef} imgs={imgs} /> \r\n                    </Item>\r\n                    <Item label=\"商品详情\" labelCol={{span:2}}  wrapperCol={{span:20}}>  \r\n                        <TextEditor ref={this.editor}  detail={detail} /> \r\n                    </Item>\r\n                    <Item>\r\n                         <Button type=\"primary\" onClick={this.submit}>提交</Button>\r\n                    </Item>    \r\n                </Form>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form.create()(ProductAddUpdate)","import React, { Component } from 'react'\r\nimport {Switch,Route, Redirect} from 'react-router-dom'\r\nimport Detail from './detail'\r\nimport Home from './home'\r\nimport ProductAddUpdate from './product-add-update'\r\nexport default class Product extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    render() {\r\n        return (\r\n          <Switch>\r\n             <Route path=\"/product\" component={Home}  exact/>\r\n             <Route path=\"/product/addupdate\" component={ProductAddUpdate} exact />\r\n             <Route path=\"/product/detail\" component={Detail} exact />\r\n             <Redirect to=\"/product\" />\r\n          </Switch>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport {Form,Input,} from 'antd'\r\nconst Item=Form.Item\r\nclass AddFrom extends Component {\r\n    constructor(props) {\r\n    super(props);\r\n    this.state = {}\r\n    }\r\n    componentWillMount(){\r\n        this.props.setForm(this.props.form)\r\n    }\r\n    render() {\r\n        const {getFieldDecorator}=this.props.form\r\n        const formItemLayout = {\r\n            labelCol: {span:4},\r\n            wrapperCol: {span:12}\r\n        }\r\n       return (\r\n           <Form {...formItemLayout}>\r\n              <Item label=\"角色名称\">\r\n                {\r\n                    getFieldDecorator(\"roleName\",{\r\n                        initialValue:'',\r\n                        rules:[\r\n                            {required:true,message:'角色名称必须输入'} \r\n                         ]\r\n                    })(\r\n                        <Input type=\"text\"placeholder=\"请输入角色名称\" />\r\n                    )\r\n                }\r\n                \r\n               </Item>\r\n            </Form>\r\n       );\r\n    }\r\n}\r\n\r\nexport default Form.create()(AddFrom)","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Form,Input,Tree,Button} from 'antd'\r\nimport menuList from '../../config/menuConfig'\r\nconst Item=Form.Item\r\nconst { TreeNode } = Tree;\r\nexport default class UpdateRole extends Component {\r\n    static propTypes={\r\n        role:PropTypes.object\r\n       }\r\n    constructor(props) {\r\n        super(props);\r\n        const {menus}=this.props.role\r\n        console.log(menus)\r\n        this.state = {\r\n            checkedKeys:menus\r\n        }\r\n    } \r\n    getTreeBodes=(menuList)=>{\r\n       return  menuList.map(item=>(\r\n             <TreeNode title={item.title} key={item.key} >\r\n                 {\r\n                    item.children?this.getTreeBodes(item.children):''\r\n                 }\r\n             </TreeNode>\r\n        ))\r\n    }\r\n    onCheck=(checkedKeys,event)=>{\r\n        this.setState({checkedKeys})\r\n    }\r\n    componentWillMount(){\r\n      this.treeNodes=this.getTreeBodes(menuList)\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n        const menus=nextProps.role.menus\r\n        this.setState({checkedKeys:menus})\r\n    }\r\n    getMenus=()=> this.state.checkedKeys\r\n    render() {\r\n        const {role}=this.props\r\n        const {checkedKeys}=this.state\r\n        const formItemLayout = {\r\n            labelCol: {span:4},\r\n            wrapperCol: {span:12}\r\n        }\r\n       return (\r\n        <div>\r\n            <Item label=\"角色名称\" {...formItemLayout}>\r\n                <Input type=\"text\"placeholder=\"请输入角色名称\" value={role.name} />\r\n                \r\n            </Item>\r\n            <Item>\r\n            <Tree \r\n                checkable\r\n                defaultExpandAll={true}\r\n                checkedKeys={checkedKeys}\r\n                onCheck={this.onCheck}\r\n                >\r\n              <TreeNode title='平台权限' key='all' >\r\n                  {this.treeNodes}\r\n              </TreeNode>\r\n            </Tree>\r\n            </Item>\r\n        </div>\r\n       );\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport{Card,Select,Input,Button,Icon,Table, message,Modal} from 'antd'\r\nimport {PAGESIZE} from '../../utils/constants'\r\nimport {reqRoles,reqAddRole,reqUpdateRole} from '../../api/index'\r\nimport AddFrom from './add-from'\r\nimport UpdateRole from './updateRole'\r\nimport memoryUtils from '../../utils/memoryUtils'\r\nimport {formateDate} from '../../utils/dateUtils'\r\nimport storageUtils from '../../utils/storageUtils'\r\nimport  './role.less'\r\nexport default class Role extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.auth=React.createRef()\r\n        this.state = {\r\n            roles:[],//所有角色\r\n            role:{},//相中的对象\r\n            menus:[],\r\n            showVisble:0\r\n        }\r\n    }\r\n    inintColumns=()=>{\r\n        this.columns = [\r\n            {\r\n              title: '角色名称',\r\n              dataIndex: 'name',\r\n              key: 'name',\r\n              align:'left',\r\n              width:'20%'\r\n            },\r\n            {\r\n                title: '创建时间',\r\n                dataIndex: 'create_time',\r\n                align:'left',\r\n                render:(create_time)=>formateDate(create_time)\r\n            },\r\n            {\r\n                title: '授权时间',\r\n                dataIndex: 'auth_time',\r\n                align:'left',\r\n                render:formateDate\r\n            },\r\n            {\r\n                title: '授权人',\r\n                dataIndex: 'auth_name',\r\n                key: 'auth_name',\r\n                align:'left'\r\n            },\r\n        ]\r\n    }\r\n    onRow=(role)=>{\r\n       return{\r\n           onClick:event=>{\r\n              this.setState({role})\r\n           }\r\n       }\r\n    }\r\n    getRoles=async()=>{\r\n        const reslut=await reqRoles()\r\n        if(reslut.data.status===0){\r\n            const roles=reslut.data.data\r\n            this.setState({roles})\r\n        }\r\n    }\r\n    addRole= async()=>{\r\n      this.form.validateFields(async(errors,values)=>{\r\n        if(!errors){\r\n          this.setState({\r\n              showVisble:0\r\n          })\r\n          const {roleName}=values\r\n          this.form.resetFields()//重置所有的数据\r\n          const reslut=await reqAddRole(roleName)\r\n          if(reslut.data.status===0){\r\n              message.success('添加角色成功')\r\n              //更新toles状态：基于原来状态更新\r\n              this.setState(state=>({\r\n                    roles:[...state.roles,reslut.data.data]\r\n            }))\r\n                //this.getRoles()\r\n              \r\n          }else{\r\n             message.success('添加角色失败')\r\n          }\r\n        }\r\n      })\r\n\r\n    }\r\n    //更新角色\r\n    updateRole=async()=>{\r\n        this.setState({\r\n            showVisble:0\r\n        })\r\n      const role=this.state.role\r\n      const menus=this.auth.current.getMenus();\r\n            role.menus=menus\r\n    role.auth_name=memoryUtils.user.username\r\n    role.auth_time=Date.now()\r\n      const result=await reqUpdateRole(role)\r\n        if(result.data.status===0){\r\n            if(role._id===memoryUtils.user.role_id){\r\n                memoryUtils.user={}\r\n                storageUtils.removeUser()\r\n                this.props.history.replace('/login')\r\n            }else{\r\n                message.success('角色设置成功')\r\n                this.getRoles()\r\n            }\r\n        }else{\r\n            message.success('角色设置失败') \r\n        }\r\n    }\r\n    //显示添加角色\r\n    showAddPop=()=>{\r\n        this.setState({\r\n            showVisble:1\r\n        }) \r\n    }\r\n    //显示设置角色权限\r\n    showUpdatePop=()=>{\r\n        this.setState({\r\n            showVisble:2\r\n        })  \r\n    }\r\n    handleCancel=()=>{\r\n        this.setState({\r\n            showVisble:0\r\n        })\r\n    }\r\n    //关闭添加角色\r\n    componentWillMount(){\r\n        this.inintColumns()\r\n    }\r\n    componentDidMount(){\r\n         this.getRoles()\r\n    }\r\n    render() {\r\n        const {roles,role,showVisble}=this.state\r\n        const title=(\r\n            <div>\r\n              <Button  type='primary' onClick={this.showAddPop}>创建角色</Button>\r\n              <Button  type='primary' style={{marginLeft:'10px'}} disabled={!role._id} onClick={this.showUpdatePop}>设置角色权限</Button>\r\n            </div>\r\n         )\r\n        return (\r\n            <Card className=\"cardtitle\" title={title}  style={{ width:'100%',height:'100%',overflow:'auto' }}>\r\n                <Table  \r\n                bordered \r\n                rowKey='_id'\r\n                rowSelection={{\r\n                    type:'radio',\r\n                    selectedRowKeys:[role._id],\r\n                    onSelect:(role)=>{\r\n                      this.setState({role})\r\n                    }\r\n                }}\r\n                dataSource={roles} \r\n                columns={this.columns} \r\n                pagination={{\r\n                    defaultPageSize:PAGESIZE,\r\n                    showQuickJumper:true\r\n                }}\r\n                onRow={this.onRow}\r\n               \r\n                />\r\n                <Modal\r\n                    title=\"添加角色\"\r\n                    visible={showVisble===1}\r\n                    onOk={this.addRole}\r\n                    onCancel={this.handleCancel}\r\n                    >\r\n                    <AddFrom \r\n                    setForm={(form)=>this.form=form}\r\n                    />\r\n                </Modal>\r\n                <Modal\r\n                    title=\"设置角色权限\"\r\n                    visible={showVisble===2}\r\n                    onOk={this.updateRole}\r\n                    onCancel={this.handleCancel}\r\n                    >\r\n                    <UpdateRole role={role} ref={this.auth} />\r\n                </Modal>\r\n            </Card>\r\n            \r\n        );\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport {Form,Select,Input,} from 'antd'\r\nimport PropTypes from 'prop-types'\r\nconst Item=Form.Item\r\nconst Option=Select.Option\r\nclass UserFrom extends Component {\r\n    constructor(props) {\r\n    super(props);\r\n    this.state = {}\r\n    }\r\n    static propTypes={\r\n        setForm:PropTypes.func.isRequired,\r\n        roles:PropTypes.array.isRequired,\r\n        user: PropTypes.object\r\n    }\r\n    componentWillMount(){\r\n        this.props.setForm(this.props.form)\r\n    }\r\n    render() {\r\n        const {getFieldDecorator}=this.props.form\r\n        const {roles}=this.props\r\n        const user=this.props.user||{}\r\n        const formItemLayout = {\r\n            labelCol: { span: 4 },  // 左侧label的宽度\r\n            wrapperCol: { span: 15 }, // 右侧包裹的宽度\r\n          }\r\n       return (\r\n           <Form {...formItemLayout}>\r\n               <Item label='用户名'>\r\n                {\r\n                    getFieldDecorator('username', {\r\n                    initialValue: user.username,\r\n                    })(\r\n                    <Input placeholder='请输入用户名'/>\r\n                    )\r\n                }\r\n                </Item>\r\n\r\n                {\r\n                    !user._id?(\r\n                    <Item label='密码'>\r\n                    {\r\n                        getFieldDecorator('password', {\r\n                        initialValue: user.password,\r\n                        })(\r\n                        <Input type='password' placeholder='请输入密码'/>\r\n                        )\r\n                    }\r\n                    </Item>\r\n                    ):''\r\n                }\r\n\r\n                <Item label='手机号'>\r\n                {\r\n                    getFieldDecorator('phone', {\r\n                    initialValue: user.phone,\r\n                    })(\r\n                    <Input placeholder='请输入手机号'/>\r\n                    )\r\n                }\r\n                </Item>\r\n                <Item label='邮箱'>\r\n                {\r\n                    getFieldDecorator('email', {\r\n                    initialValue: user.email,\r\n                    })(\r\n                    <Input placeholder='请输入邮箱'/>\r\n                    )\r\n                }\r\n                </Item>\r\n\r\n                <Item label='角色'>\r\n                {\r\n                    getFieldDecorator('role_id', {\r\n                    initialValue: user.role_id,\r\n                    })(\r\n                    <Select> \r\n                        {\r\n                           roles.map(item=>(\r\n                            <Option key={item._id} value={item._id}>{item.name}</Option>\r\n                           )) \r\n                        }\r\n                    </Select>\r\n                    )\r\n                }\r\n                </Item>\r\n            </Form>\r\n       );\r\n    }\r\n}\r\n\r\nexport default Form.create()(UserFrom)","import React, { Component } from 'react'\r\nimport { Card ,Table,Button,Icon, message,Modal} from 'antd';\r\nimport {reqUserList,reqUserDelete,reqUserAddOrUpdate} from '../../api/index'\r\nimport UserFrom from './user-from'\r\nconst { confirm } = Modal;\r\nexport default class User extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            users:[],\r\n            roles:[],\r\n            isVisble:false\r\n        }\r\n    }\r\n    //初始化所有的例数\r\n    inintColumns=()=>{\r\n        this.columns = [\r\n            {\r\n              title: '用户名',\r\n              dataIndex: 'username',\r\n              key: 'username',\r\n            },\r\n            {\r\n                title: '邮箱',\r\n                dataIndex: 'email',\r\n                key: 'email',\r\n            },\r\n            {\r\n                title: '电话',\r\n                dataIndex: 'phone',\r\n                key: 'phone',\r\n            },\r\n            {\r\n                title: '注册时间',\r\n                dataIndex: 'create_time',\r\n                key: 'create_time',\r\n            },\r\n            {\r\n                title: '所属角色',\r\n                dataIndex: 'role_id',\r\n                render:(role_id)=>this.rolesName[role_id]\r\n            },\r\n            {\r\n              title: '操作',\r\n              render:(user)=>(\r\n                  <div className=\"btnDiv\">\r\n                       <div onClick={()=>this.showUpdatePop(user)}>修改</div> \r\n                       <div onClick={()=>this.showDetePop(user)} style={{marginLeft:'10px'}}>删除</div> \r\n                  </div>\r\n              )\r\n            }\r\n        ]\r\n    }\r\n    getuserList=async()=>{\r\n        const reslut=await reqUserList()\r\n        if(reslut.data.status===0){\r\n           const {users,roles}=reslut.data.data\r\n           this.initRoleseNames(roles)\r\n           this.setState({users,roles})\r\n        }\r\n    }\r\n    //根据role生成对象\r\n    initRoleseNames=(roles)=>{\r\n        const rolseNames=roles.reduce((pre,role)=>{\r\n            pre[role._id]=role.name\r\n          return  pre\r\n         },{})\r\n         this.rolesName=rolseNames\r\n    }\r\n\r\n    addOrUpdateUser= async()=>{\r\n        this.setState({isVisble:false})\r\n        // 1. 收集输入数据\r\n        const user = this.form.getFieldsValue()\r\n        this.form.resetFields()\r\n        if(this.user){\r\n            user._id=this.user._id\r\n        }\r\n        const result= await reqUserAddOrUpdate(user)\r\n        if(result.data.status===0){\r\n            message.success(`${this.user?'修改':'添加'}用户成功`)\r\n            this.getuserList()\r\n         }else{\r\n            message.success(`${this.user?'修改':'添加'}用户失败`)\r\n         }\r\n    }\r\n    handleCancel=()=>{\r\n        this.setState({isVisble:false})\r\n        this.form.resetFields()\r\n    }\r\n    //更新用户\r\n    showUpdatePop=(user)=>{\r\n        this.user=user\r\n        this.setState({isVisble:true}) \r\n    }\r\n    //显示添加用户\r\n    showAddPop=()=>{\r\n        this.user=null\r\n        this.setState({isVisble:true}) \r\n    }\r\n    showDetePop=(user)=>{\r\n        confirm({\r\n            title: `确定删除${user.username}?`,\r\n             onOk:async()=> {\r\n                const result=await reqUserDelete(user._id)\r\n                if(result.data.status===0){\r\n                    message.success('删除用户成功')\r\n                    this.getuserList()\r\n                }else{\r\n                    message.success('删除用户失败')\r\n                }\r\n            },\r\n            onCancel() {\r\n              console.log('Cancel');\r\n            },\r\n        });\r\n    }\r\n    componentWillMount(){\r\n       this.inintColumns() \r\n    }\r\n    componentDidMount(){\r\n        this.getuserList()\r\n    }\r\n    render() {\r\n        const title=(\r\n            <Button type=\"primary\" onClick={this.showAddPop}>创建用户</Button>\r\n        )\r\n        const {users,isVisble,roles}=this.state\r\n        const {user}=this\r\n       return (\r\n            <Card  title={title}  style={{ width:'100%',height:'100%'}}>\r\n                <Table  \r\n                rowKey=\"_id\" \r\n                bordered \r\n                dataSource={users} \r\n                columns={this.columns} \r\n                pagination={{defaultPageSize:8,showQuickJumper:true}}\r\n                />\r\n                <Modal\r\n                    title={user?'修改用户':'添加用户'}\r\n                    visible={isVisble===true}\r\n                    onOk={this.addOrUpdateUser}\r\n                    onCancel={this.handleCancel}\r\n                 >\r\n                    <UserFrom user={user} roles={roles} setForm={form=>this.form=form} />\r\n                    \r\n                </Modal>\r\n            </Card>\r\n       )\r\n    }\r\n}","import React, { Component } from 'react'\r\nexport default class Bar extends Component {\r\nconstructor(props) {\r\nsuper(props);\r\nthis.state = {}\r\n}\r\nrender() {\r\nreturn (<div></div>);\r\n}\r\n}","import React, { Component } from 'react'\r\nexport default class Line extends Component {\r\nconstructor(props) {\r\nsuper(props);\r\nthis.state = {}\r\n}\r\nrender() {\r\nreturn (<div></div>);\r\n}\r\n}","import React, { Component } from 'react'\r\nexport default class Pie extends Component {\r\nconstructor(props) {\r\nsuper(props);\r\nthis.state = {}\r\n}\r\nrender() {\r\nreturn (<div></div>);\r\n}\r\n}","import React, { Component } from 'react'\r\nimport {Redirect, Route, Switch} from 'react-router-dom'\r\nimport memoryUtils from '../../utils/memoryUtils'\r\nimport { Layout} from 'antd';\r\nimport Header from '../../components/header/header'\r\nimport LeftNav from '../../components/left-nav/leftNav'\r\nimport Home from '../home/home'\r\nimport Category from '../category/category'\r\nimport Product from '../product/product'\r\nimport Role from '../role/role'\r\nimport User from '../user/user'\r\nimport Bar from '../charts/bar'\r\nimport Line from '../charts/line'\r\nimport Pie from '../charts/pie'\r\nconst {  Content, Footer, Sider } = Layout;\r\nexport default class Admin extends Component {\r\n    render() {\r\n        const user=memoryUtils.user\r\n        if(!user || !user._id){\r\n           return <Redirect to=\"/login\" />\r\n        }\r\n        return (\r\n            <Layout style={{height:'100%'}}>\r\n                <Sider>\r\n                    <LeftNav />\r\n                </Sider>\r\n                <Layout>\r\n                    <Header />\r\n                    <Content style={{backgroundColor:'#f1f1f1',padding:'10px 10px 0px 10px',minheight:'100%'}}>\r\n                        <Switch>\r\n                            <Redirect from='/' exact to='/home'/>\r\n                            <Route path='/home' component={Home}/>\r\n                            <Route path='/category' component={Category}/>\r\n                            <Route path='/product' component={Product}/>\r\n                            <Route path='/user' component={User}/>\r\n                            <Route path='/role' component={Role}/>\r\n                            <Route path=\"/charts/bar\" component={Bar}/>\r\n                            <Route path=\"/charts/pie\" component={Pie}/>\r\n                            <Route path=\"/charts/line\" component={Line}/>\r\n                            <Redirect to=\"/home\" />\r\n                        </Switch>\r\n                    </Content>\r\n                    <Footer style={{textAlign:'center'}}>推荐使用google浏览器</Footer>\r\n                </Layout>\r\n            </Layout>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\nimport { BrowserRouter , Route ,Switch} from 'react-router-dom';\nimport 'antd/dist/antd.less';\nimport Login from './pages/login/login'\nimport Admin from './pages/admin/admin'\nexport default class App extends Component{\n  render(){\n    return(\n      <BrowserRouter>\n      <Switch>\n       <Route path='/login' component={Login}></Route>\n       <Route path='/' component={Admin}></Route>\n       </Switch>\n      </BrowserRouter>\n    )\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport memoryUtils from './utils/memoryUtils'\nimport storageUtils from './utils/storageUtils'\nconst   user=storageUtils.getUser()\n        memoryUtils.user=user \nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}